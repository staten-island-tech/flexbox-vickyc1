* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.box {
  color: white;
  font-size: 100px;
  text-align: center;
  text-shadow: 4px 4px 0 rgba(0, 0, 0, 0.1);
  padding: 10px;
}

.box1 {
  background: #1abc9c;
}
.box2 {
  background: #3498db;
}
.box3 {
  background: #9b59b6;
}
.box4 {
  background: #34495e;
}
.box5 {
  background: #f1c40f;
}
.box6 {
  background: #e67e22;
}
.box7 {
  background: #e74c3c;
}
.box8 {
  background: #bdc3c7;
}
.box9 {
  background: #2ecc71;
}
.box10 {
  background: #16a085;
}

.container {
  display: flex;
}

.box {
  /*
    flex: 1;
   each will divide the space proportionately, so same size.
  how many extra space on that line/ not enough space, how to divide them among the siblings
  
  when set flex to 1, is short for setting flex-grow and flex-shink to 1
  */
}

.box2 {
  /*
    flex: 2;
   twice as big
   */
}

.box {
  /*
    flex-grow: 1;
        when have extra space, how should we divide it amongst everyone on the same line 

  flex-shrink: 1;
        how to slim down when there isn't really enough space for all of the elements. default is 1.
  flex-basis: ;
        before growing and shrinking, before taking extra space and alloting it, how big/wide/high should the actual element be?  */
}

.box1 {
  flex-basis: 400px;
  flex-grow: 2;
  /* default is 0. box1 is getting twice the extra space as box2 so gets wider a little bit */
  flex-shrink: 10;
  /* how much of myself to give up in proportion to the other one. ex: when not enough room, will shrink myself 10 times more than box2 */
  flex: 2 10 400px;
  /* shorthand. grow, shrink, then basis. */
}

.box2 {
  flex-basis: 400px;
  flex-grow: 1;
  flex-shrink: 1;
  flex: 1 1 400px;
}
